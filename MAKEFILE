# Default .env location
ENV_FILE=.env

# ---------------- Commands ----------------

# Command: make up
up: check-env setup-dirs build init
	@echo "🚀 Starting Airflow stack with .env configuration..."
	docker compose up -d

# Command: make down
down:
	@echo "🛑 Stopping Airflow stack..."
	docker compose down

# Command: make restart
restart: down up

# Command: make logs
logs:
	docker compose logs -f

# Command: make test
test:
	@echo "🧪 Running pytest data quality checks..."
	docker compose exec airflow-worker pytest tests/

# Build Airflow images
build:
	@echo "🔨 Building Airflow images..."
	docker compose build

# Initialize Airflow (safe to rerun)
init:
	@echo "⚙️ Initializing Airflow database and users..."
	docker compose run --rm airflow-init

# Ensure required folders exist with correct ownership
setup-dirs:
	@echo "📂 Creating data/ and output/ folders..."
	@python -c "import os; os.makedirs('data', exist_ok=True); os.makedirs('output', exist_ok=True)"
	@echo "🔧 Setting folder permissions (best-effort, platform-dependent)..."
	@python -c "import os, sys; \
try: os.chmod('data', 0o775); os.chmod('output', 0o775); \
except PermissionError: print('⚠️ Could not set permissions, check manually.')"

# Ensure .env exists (cross-platform)
check-env:
	@python - <<END
import os
env_file = '.env'
if not os.path.exists(env_file):
    api_key = input('Enter your OpenWeather API key: ')
    with open(env_file, 'w') as f:
        f.write(f"AIRFLOW_UID=50000\nAIRFLOW_GID=0\nOPENWEATHER_API_KEY={api_key}\n")
    print('.env file created ✅')
else:
    print('✅ Using existing .env')
END